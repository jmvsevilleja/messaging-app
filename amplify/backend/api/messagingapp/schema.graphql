input AMPLIFY {
    globalAuthRule: AuthRule = { allow: public }
}
enum MessageStatus {
    SENT
    DELIVERED
    READ
}

type Message @model @auth(rules: [{ allow: public }]) {
    id: ID!
    content: String
    userID: ID
    chatroomID: ID
    image: String
    audio: String
    status: MessageStatus
    replyToMessageID: ID
    forUserId: ID
}

type ChatRoom @model @auth(rules: [{ allow: public }]) {
    id: ID!
    newMessages: Int
    LastMessage: Message
    Messages: [Message] @hasMany
    ChatRoomUsers: [ChatRoomUser] @hasMany
    Admin: User
    name: String
    imageUri: String
}

type User @model @auth(rules: [{ allow: public }]) {
    id: ID!
    userID: String!
        @index(
            name: "byUserID"
            queryField: "userByUserID"
            sortKeyFields: ["id"]
        )
    name: String!
        @index(name: "byName", queryField: "userByName", sortKeyFields: ["id"])
    imageUri: String
    status: String
    Messages: [Message] @hasMany
    chatrooms: [ChatRoomUser] @hasMany
    lastOnlineAt: AWSTimestamp
    publicKey: String
}

type ChatRoomUser @model(queries: null) @auth(rules: [{ allow: public }]) {
    id: ID!
    chatroomID: ID!
    userID: ID!
    chatroom: ChatRoom! @belongsTo
    user: User! @belongsTo
}
